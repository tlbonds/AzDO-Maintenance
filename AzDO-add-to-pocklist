Here's a PowerShell script that adds a list of values to a pick list field in an Azure DevOps process template if it doesn't exist:


# Replace these values with your own
$organizationName = "your-organization-name"
$projectName = "your-project-name"
$processName = "your-process-name"
$fieldRefName = "your-field-ref-name"
$fieldDisplayName = "your-field-display-name"
$valuesToAdd = @("value1", "value2", "value3")

# Authenticate with Azure DevOps using a personal access token
$personalAccessToken = "your-personal-access-token"
$base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(":$($personalAccessToken)"))

# Construct the REST API URL to get the process template
$url = "https://dev.azure.com/$($organizationName)/$($projectName)/_apis/work/processes/$($processName)?api-version=6.0-preview.1"

# Make the REST API request and convert the response to JSON
$processTemplate = Invoke-RestMethod -Uri $url -Headers @{Authorization=("Basic {0}" -f $base64AuthInfo)} -Method Get

# Find the field in the process template
$field = $processTemplate.fields | Where-Object { $_.referenceName -eq $fieldRefName }

# If the field doesn't exist, create it and add the values
if ($field -eq $null) {
    # Create the new field
    $newField = @{
        referenceName = $fieldRefName
        name = $fieldDisplayName
        type = "Picklist"
        pickList = @{
            items = @()
        }
    }

    # Add the new field to the process template
    $processTemplate.fields += $newField
    $field = $newField
}

# Add the values to the field's pick list
foreach ($value in $valuesToAdd) {
    # Check if the value already exists in the pick list
    $existingValue = $field.pickList.items | Where-Object { $_.value -eq $value }

    # If the value doesn't exist, add it
    if ($existingValue -eq $null) {
        $newValue = @{
            value = $value
        }

        $field.pickList.items += $newValue
    }
}

# Serialize the modified process template to JSON
$processTemplateJson = ConvertTo-Json $processTemplate -Depth 100

# Construct the REST API URL to update the process template
$url = "https://dev.azure.com/$($organizationName)/$($projectName)/_apis/work/processes/$($processName)?api-version=6.0-preview.1"

# Make the REST API request to update the process template
Invoke-RestMethod -Uri $url -Headers @{Authorization=("Basic {0}" -f $base64AuthInfo)} -Method Put -Body $processTemplateJson -ContentType "application/json"

This script checks if the specified field exists in the process template, and if it doesn't, it creates the field with the specified display name and reference name. It then adds each value in the specified list to the field's pick list if the value doesn't already exist. Finally, it updates the process template with the modified field and pick list.

