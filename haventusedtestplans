# Define variables
$pat = "<PAT>"
$orgUrl = "<OrgUrl>"

# Set the Azure DevOps organization context
$connectionToken = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes(":$($pat)"))
$token = [System.Text.Encoding]::ASCII.GetBytes("$($connectionToken):")
$headers = @{
    Authorization = "Basic {0}" -f [System.Convert]::ToBase64String($token)
    "Content-Type" = "application/json"
}
$azureDevOpsUri = "$orgUrl/_apis/projects?api-version=6.0"

# Get all the projects in the organization
$projects = Invoke-RestMethod -Uri $azureDevOpsUri -Headers $headers -Method Get | Select-Object -ExpandProperty Value

# Loop through each project and get the users who have not used test plans, test suites or test cases in the last 30 days
foreach ($project in $projects) {
    # Get the project ID
    $projectId = $project.id

    # Set the Azure DevOps project context
    $azureDevOpsUri = "$orgUrl/$($projectId)/_apis/testplan/TestResults/ByBuild?api-version=6.0-preview.2"

    # Get the users who have not used test plans, test suites or test cases in the last 30 days
    $users = Invoke-RestMethod -Uri $azureDevOpsUri -Headers $headers -Method Get | Select-Object -ExpandProperty Users |
        Where-Object { $_.AccessLevel -eq "basic+testplans" -and $_.LastActivityDate -lt (Get-Date).AddDays(-30) } |
        Select-Object DisplayName, Email

    # Output the results
    Write-Host "Users who have not used test plans, test suites or test cases in the last 30 days in the $($project.name) project:"
    $users | Format-Table -AutoSize
}
